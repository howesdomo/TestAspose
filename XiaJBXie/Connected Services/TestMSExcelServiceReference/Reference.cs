//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace XiaJBXie.TestMSExcelServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SOAPResult", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class SOAPResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionInfoField;
        
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessExceptionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnObjectJsonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ExceptionInfo {
            get {
                return this.ExceptionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionInfoField, value) != true)) {
                    this.ExceptionInfoField = value;
                    this.RaisePropertyChanged("ExceptionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string BusinessExceptionInfo {
            get {
                return this.BusinessExceptionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessExceptionInfoField, value) != true)) {
                    this.BusinessExceptionInfoField = value;
                    this.RaisePropertyChanged("BusinessExceptionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ReturnObjectJson {
            get {
                return this.ReturnObjectJsonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnObjectJsonField, value) != true)) {
                    this.ReturnObjectJsonField = value;
                    this.RaisePropertyChanged("ReturnObjectJson");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestMSExcelServiceReference.PCWebServiceSoap")]
    public interface PCWebServiceSoap {
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 HelloWorldResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        XiaJBXie.TestMSExcelServiceReference.HelloWorldResponse HelloWorld(XiaJBXie.TestMSExcelServiceReference.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.IAsyncResult BeginHelloWorld(XiaJBXie.TestMSExcelServiceReference.HelloWorldRequest request, System.AsyncCallback callback, object asyncState);
        
        XiaJBXie.TestMSExcelServiceReference.HelloWorldResponse EndHelloWorld(System.IAsyncResult result);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 TestOpenAndSaveExcelResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestOpenAndSaveExcel", ReplyAction="*")]
        XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelResponse TestOpenAndSaveExcel(XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/TestOpenAndSaveExcel", ReplyAction="*")]
        System.IAsyncResult BeginTestOpenAndSaveExcel(XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequest request, System.AsyncCallback callback, object asyncState);
        
        XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelResponse EndTestOpenAndSaveExcel(System.IAsyncResult result);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 base64Str 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload_Open_Save_GetBack", ReplyAction="*")]
        XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackResponse Upload_Open_Save_GetBack(XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Upload_Open_Save_GetBack", ReplyAction="*")]
        System.IAsyncResult BeginUpload_Open_Save_GetBack(XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequest request, System.AsyncCallback callback, object asyncState);
        
        XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackResponse EndUpload_Open_Save_GetBack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestPrint", ReplyAction="*")]
        void TestPrint();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/TestPrint", ReplyAction="*")]
        System.IAsyncResult BeginTestPrint(System.AsyncCallback callback, object asyncState);
        
        void EndTestPrint(System.IAsyncResult result);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 fileName 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestConcurrentRead", ReplyAction="*")]
        XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadResponse TestConcurrentRead(XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/TestConcurrentRead", ReplyAction="*")]
        System.IAsyncResult BeginTestConcurrentRead(XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequest request, System.AsyncCallback callback, object asyncState);
        
        XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadResponse EndTestConcurrentRead(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://tempuri.org/", Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.HelloWorldRequestBody Body;
        
        public HelloWorldRequest() {
        }
        
        public HelloWorldRequest(XiaJBXie.TestMSExcelServiceReference.HelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class HelloWorldRequestBody {
        
        public HelloWorldRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://tempuri.org/", Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.HelloWorldResponseBody Body;
        
        public HelloWorldResponse() {
        }
        
        public HelloWorldResponse(XiaJBXie.TestMSExcelServiceReference.HelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody() {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult) {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TestOpenAndSaveExcelRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TestOpenAndSaveExcel", Namespace="http://tempuri.org/", Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequestBody Body;
        
        public TestOpenAndSaveExcelRequest() {
        }
        
        public TestOpenAndSaveExcelRequest(XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class TestOpenAndSaveExcelRequestBody {
        
        public TestOpenAndSaveExcelRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TestOpenAndSaveExcelResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TestOpenAndSaveExcelResponse", Namespace="http://tempuri.org/", Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelResponseBody Body;
        
        public TestOpenAndSaveExcelResponse() {
        }
        
        public TestOpenAndSaveExcelResponse(XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class TestOpenAndSaveExcelResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string TestOpenAndSaveExcelResult;
        
        public TestOpenAndSaveExcelResponseBody() {
        }
        
        public TestOpenAndSaveExcelResponseBody(string TestOpenAndSaveExcelResult) {
            this.TestOpenAndSaveExcelResult = TestOpenAndSaveExcelResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class Upload_Open_Save_GetBackRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Upload_Open_Save_GetBack", Namespace="http://tempuri.org/", Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequestBody Body;
        
        public Upload_Open_Save_GetBackRequest() {
        }
        
        public Upload_Open_Save_GetBackRequest(XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class Upload_Open_Save_GetBackRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string base64Str;
        
        public Upload_Open_Save_GetBackRequestBody() {
        }
        
        public Upload_Open_Save_GetBackRequestBody(string base64Str) {
            this.base64Str = base64Str;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class Upload_Open_Save_GetBackResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Upload_Open_Save_GetBackResponse", Namespace="http://tempuri.org/", Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackResponseBody Body;
        
        public Upload_Open_Save_GetBackResponse() {
        }
        
        public Upload_Open_Save_GetBackResponse(XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class Upload_Open_Save_GetBackResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.SOAPResult Upload_Open_Save_GetBackResult;
        
        public Upload_Open_Save_GetBackResponseBody() {
        }
        
        public Upload_Open_Save_GetBackResponseBody(XiaJBXie.TestMSExcelServiceReference.SOAPResult Upload_Open_Save_GetBackResult) {
            this.Upload_Open_Save_GetBackResult = Upload_Open_Save_GetBackResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TestConcurrentReadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TestConcurrentRead", Namespace="http://tempuri.org/", Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequestBody Body;
        
        public TestConcurrentReadRequest() {
        }
        
        public TestConcurrentReadRequest(XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class TestConcurrentReadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string fileName;
        
        public TestConcurrentReadRequestBody() {
        }
        
        public TestConcurrentReadRequestBody(string fileName) {
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TestConcurrentReadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TestConcurrentReadResponse", Namespace="http://tempuri.org/", Order=0)]
        public XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadResponseBody Body;
        
        public TestConcurrentReadResponse() {
        }
        
        public TestConcurrentReadResponse(XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class TestConcurrentReadResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string TestConcurrentReadResult;
        
        public TestConcurrentReadResponseBody() {
        }
        
        public TestConcurrentReadResponseBody(string TestConcurrentReadResult) {
            this.TestConcurrentReadResult = TestConcurrentReadResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PCWebServiceSoapChannel : XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestOpenAndSaveExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestOpenAndSaveExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Upload_Open_Save_GetBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Upload_Open_Save_GetBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public XiaJBXie.TestMSExcelServiceReference.SOAPResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((XiaJBXie.TestMSExcelServiceReference.SOAPResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestConcurrentReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestConcurrentReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PCWebServiceSoapClient : System.ServiceModel.ClientBase<XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap>, XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap {
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestOpenAndSaveExcelDelegate;
        
        private EndOperationDelegate onEndTestOpenAndSaveExcelDelegate;
        
        private System.Threading.SendOrPostCallback onTestOpenAndSaveExcelCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpload_Open_Save_GetBackDelegate;
        
        private EndOperationDelegate onEndUpload_Open_Save_GetBackDelegate;
        
        private System.Threading.SendOrPostCallback onUpload_Open_Save_GetBackCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestPrintDelegate;
        
        private EndOperationDelegate onEndTestPrintDelegate;
        
        private System.Threading.SendOrPostCallback onTestPrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestConcurrentReadDelegate;
        
        private EndOperationDelegate onEndTestConcurrentReadDelegate;
        
        private System.Threading.SendOrPostCallback onTestConcurrentReadCompletedDelegate;
        
        public PCWebServiceSoapClient() {
        }
        
        public PCWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PCWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PCWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PCWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<TestOpenAndSaveExcelCompletedEventArgs> TestOpenAndSaveExcelCompleted;
        
        public event System.EventHandler<Upload_Open_Save_GetBackCompletedEventArgs> Upload_Open_Save_GetBackCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TestPrintCompleted;
        
        public event System.EventHandler<TestConcurrentReadCompletedEventArgs> TestConcurrentReadCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        XiaJBXie.TestMSExcelServiceReference.HelloWorldResponse XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.HelloWorld(XiaJBXie.TestMSExcelServiceReference.HelloWorldRequest request) {
            return base.Channel.HelloWorld(request);
        }
        
        public string HelloWorld() {
            XiaJBXie.TestMSExcelServiceReference.HelloWorldRequest inValue = new XiaJBXie.TestMSExcelServiceReference.HelloWorldRequest();
            inValue.Body = new XiaJBXie.TestMSExcelServiceReference.HelloWorldRequestBody();
            XiaJBXie.TestMSExcelServiceReference.HelloWorldResponse retVal = ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).HelloWorld(inValue);
            return retVal.Body.HelloWorldResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.BeginHelloWorld(XiaJBXie.TestMSExcelServiceReference.HelloWorldRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            XiaJBXie.TestMSExcelServiceReference.HelloWorldRequest inValue = new XiaJBXie.TestMSExcelServiceReference.HelloWorldRequest();
            inValue.Body = new XiaJBXie.TestMSExcelServiceReference.HelloWorldRequestBody();
            return ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).BeginHelloWorld(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        XiaJBXie.TestMSExcelServiceReference.HelloWorldResponse XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndHelloWorld(System.IAsyncResult result) {
            XiaJBXie.TestMSExcelServiceReference.HelloWorldResponse retVal = ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).EndHelloWorld(result);
            return retVal.Body.HelloWorldResult;
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginHelloWorld(callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = this.EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        public void HelloWorldAsync(object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, null, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelResponse XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.TestOpenAndSaveExcel(XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequest request) {
            return base.Channel.TestOpenAndSaveExcel(request);
        }
        
        public string TestOpenAndSaveExcel() {
            XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequest inValue = new XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequest();
            inValue.Body = new XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequestBody();
            XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelResponse retVal = ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).TestOpenAndSaveExcel(inValue);
            return retVal.Body.TestOpenAndSaveExcelResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.BeginTestOpenAndSaveExcel(XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestOpenAndSaveExcel(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestOpenAndSaveExcel(System.AsyncCallback callback, object asyncState) {
            XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequest inValue = new XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequest();
            inValue.Body = new XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelRequestBody();
            return ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).BeginTestOpenAndSaveExcel(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelResponse XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.EndTestOpenAndSaveExcel(System.IAsyncResult result) {
            return base.Channel.EndTestOpenAndSaveExcel(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndTestOpenAndSaveExcel(System.IAsyncResult result) {
            XiaJBXie.TestMSExcelServiceReference.TestOpenAndSaveExcelResponse retVal = ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).EndTestOpenAndSaveExcel(result);
            return retVal.Body.TestOpenAndSaveExcelResult;
        }
        
        private System.IAsyncResult OnBeginTestOpenAndSaveExcel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginTestOpenAndSaveExcel(callback, asyncState);
        }
        
        private object[] OnEndTestOpenAndSaveExcel(System.IAsyncResult result) {
            string retVal = this.EndTestOpenAndSaveExcel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestOpenAndSaveExcelCompleted(object state) {
            if ((this.TestOpenAndSaveExcelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestOpenAndSaveExcelCompleted(this, new TestOpenAndSaveExcelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestOpenAndSaveExcelAsync() {
            this.TestOpenAndSaveExcelAsync(null);
        }
        
        public void TestOpenAndSaveExcelAsync(object userState) {
            if ((this.onBeginTestOpenAndSaveExcelDelegate == null)) {
                this.onBeginTestOpenAndSaveExcelDelegate = new BeginOperationDelegate(this.OnBeginTestOpenAndSaveExcel);
            }
            if ((this.onEndTestOpenAndSaveExcelDelegate == null)) {
                this.onEndTestOpenAndSaveExcelDelegate = new EndOperationDelegate(this.OnEndTestOpenAndSaveExcel);
            }
            if ((this.onTestOpenAndSaveExcelCompletedDelegate == null)) {
                this.onTestOpenAndSaveExcelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestOpenAndSaveExcelCompleted);
            }
            base.InvokeAsync(this.onBeginTestOpenAndSaveExcelDelegate, null, this.onEndTestOpenAndSaveExcelDelegate, this.onTestOpenAndSaveExcelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackResponse XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.Upload_Open_Save_GetBack(XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequest request) {
            return base.Channel.Upload_Open_Save_GetBack(request);
        }
        
        public XiaJBXie.TestMSExcelServiceReference.SOAPResult Upload_Open_Save_GetBack(string base64Str) {
            XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequest inValue = new XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequest();
            inValue.Body = new XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequestBody();
            inValue.Body.base64Str = base64Str;
            XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackResponse retVal = ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).Upload_Open_Save_GetBack(inValue);
            return retVal.Body.Upload_Open_Save_GetBackResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.BeginUpload_Open_Save_GetBack(XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpload_Open_Save_GetBack(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpload_Open_Save_GetBack(string base64Str, System.AsyncCallback callback, object asyncState) {
            XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequest inValue = new XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequest();
            inValue.Body = new XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackRequestBody();
            inValue.Body.base64Str = base64Str;
            return ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).BeginUpload_Open_Save_GetBack(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackResponse XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.EndUpload_Open_Save_GetBack(System.IAsyncResult result) {
            return base.Channel.EndUpload_Open_Save_GetBack(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public XiaJBXie.TestMSExcelServiceReference.SOAPResult EndUpload_Open_Save_GetBack(System.IAsyncResult result) {
            XiaJBXie.TestMSExcelServiceReference.Upload_Open_Save_GetBackResponse retVal = ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).EndUpload_Open_Save_GetBack(result);
            return retVal.Body.Upload_Open_Save_GetBackResult;
        }
        
        private System.IAsyncResult OnBeginUpload_Open_Save_GetBack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string base64Str = ((string)(inValues[0]));
            return this.BeginUpload_Open_Save_GetBack(base64Str, callback, asyncState);
        }
        
        private object[] OnEndUpload_Open_Save_GetBack(System.IAsyncResult result) {
            XiaJBXie.TestMSExcelServiceReference.SOAPResult retVal = this.EndUpload_Open_Save_GetBack(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpload_Open_Save_GetBackCompleted(object state) {
            if ((this.Upload_Open_Save_GetBackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Upload_Open_Save_GetBackCompleted(this, new Upload_Open_Save_GetBackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Upload_Open_Save_GetBackAsync(string base64Str) {
            this.Upload_Open_Save_GetBackAsync(base64Str, null);
        }
        
        public void Upload_Open_Save_GetBackAsync(string base64Str, object userState) {
            if ((this.onBeginUpload_Open_Save_GetBackDelegate == null)) {
                this.onBeginUpload_Open_Save_GetBackDelegate = new BeginOperationDelegate(this.OnBeginUpload_Open_Save_GetBack);
            }
            if ((this.onEndUpload_Open_Save_GetBackDelegate == null)) {
                this.onEndUpload_Open_Save_GetBackDelegate = new EndOperationDelegate(this.OnEndUpload_Open_Save_GetBack);
            }
            if ((this.onUpload_Open_Save_GetBackCompletedDelegate == null)) {
                this.onUpload_Open_Save_GetBackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpload_Open_Save_GetBackCompleted);
            }
            base.InvokeAsync(this.onBeginUpload_Open_Save_GetBackDelegate, new object[] {
                        base64Str}, this.onEndUpload_Open_Save_GetBackDelegate, this.onUpload_Open_Save_GetBackCompletedDelegate, userState);
        }
        
        public void TestPrint() {
            base.Channel.TestPrint();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestPrint(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestPrint(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTestPrint(System.IAsyncResult result) {
            base.Channel.EndTestPrint(result);
        }
        
        private System.IAsyncResult OnBeginTestPrint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginTestPrint(callback, asyncState);
        }
        
        private object[] OnEndTestPrint(System.IAsyncResult result) {
            this.EndTestPrint(result);
            return null;
        }
        
        private void OnTestPrintCompleted(object state) {
            if ((this.TestPrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestPrintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestPrintAsync() {
            this.TestPrintAsync(null);
        }
        
        public void TestPrintAsync(object userState) {
            if ((this.onBeginTestPrintDelegate == null)) {
                this.onBeginTestPrintDelegate = new BeginOperationDelegate(this.OnBeginTestPrint);
            }
            if ((this.onEndTestPrintDelegate == null)) {
                this.onEndTestPrintDelegate = new EndOperationDelegate(this.OnEndTestPrint);
            }
            if ((this.onTestPrintCompletedDelegate == null)) {
                this.onTestPrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestPrintCompleted);
            }
            base.InvokeAsync(this.onBeginTestPrintDelegate, null, this.onEndTestPrintDelegate, this.onTestPrintCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadResponse XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.TestConcurrentRead(XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequest request) {
            return base.Channel.TestConcurrentRead(request);
        }
        
        public string TestConcurrentRead(string fileName) {
            XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequest inValue = new XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequest();
            inValue.Body = new XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequestBody();
            inValue.Body.fileName = fileName;
            XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadResponse retVal = ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).TestConcurrentRead(inValue);
            return retVal.Body.TestConcurrentReadResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.BeginTestConcurrentRead(XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestConcurrentRead(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestConcurrentRead(string fileName, System.AsyncCallback callback, object asyncState) {
            XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequest inValue = new XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequest();
            inValue.Body = new XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadRequestBody();
            inValue.Body.fileName = fileName;
            return ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).BeginTestConcurrentRead(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadResponse XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap.EndTestConcurrentRead(System.IAsyncResult result) {
            return base.Channel.EndTestConcurrentRead(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndTestConcurrentRead(System.IAsyncResult result) {
            XiaJBXie.TestMSExcelServiceReference.TestConcurrentReadResponse retVal = ((XiaJBXie.TestMSExcelServiceReference.PCWebServiceSoap)(this)).EndTestConcurrentRead(result);
            return retVal.Body.TestConcurrentReadResult;
        }
        
        private System.IAsyncResult OnBeginTestConcurrentRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return this.BeginTestConcurrentRead(fileName, callback, asyncState);
        }
        
        private object[] OnEndTestConcurrentRead(System.IAsyncResult result) {
            string retVal = this.EndTestConcurrentRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestConcurrentReadCompleted(object state) {
            if ((this.TestConcurrentReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestConcurrentReadCompleted(this, new TestConcurrentReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestConcurrentReadAsync(string fileName) {
            this.TestConcurrentReadAsync(fileName, null);
        }
        
        public void TestConcurrentReadAsync(string fileName, object userState) {
            if ((this.onBeginTestConcurrentReadDelegate == null)) {
                this.onBeginTestConcurrentReadDelegate = new BeginOperationDelegate(this.OnBeginTestConcurrentRead);
            }
            if ((this.onEndTestConcurrentReadDelegate == null)) {
                this.onEndTestConcurrentReadDelegate = new EndOperationDelegate(this.OnEndTestConcurrentRead);
            }
            if ((this.onTestConcurrentReadCompletedDelegate == null)) {
                this.onTestConcurrentReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestConcurrentReadCompleted);
            }
            base.InvokeAsync(this.onBeginTestConcurrentReadDelegate, new object[] {
                        fileName}, this.onEndTestConcurrentReadDelegate, this.onTestConcurrentReadCompletedDelegate, userState);
        }
    }
}
